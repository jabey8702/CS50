{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red52\green52\blue52;\red246\green247\blue249;\red255\green255\blue255;
\red0\green0\blue0;\red127\green127\blue127;}
{\*\expandedcolortbl;;\cssrgb\c26667\c26667\c26667;\cssrgb\c97255\c97647\c98039;\csgray\c100000;
\cssrgb\c0\c0\c0;\cssrgb\c57046\c57047\c57046;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14600\viewh14700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \
String key [ ]  \
String alphabets[ ]= [ABCDEFGHIJKLMNOPQRSTUVWXYZ ]\
\
Case1 = \'93babz\'94\
Case2 = \'93cbaa\'94\
Case3 = \'93cbav\'94\
Case4 = \'93acbc\'94\
\
Case5 = \'93cbczc\'94\
at c, I = 4.\
I-1 =  3, charAt(I-1) or charAt(3)\
I-2  = 2 or 3-1, chatAt(I-2) or charAt(2)\
I-3 =  1 or 2-1, charAt(I-3) or charAt(1)\
I-4 = 0 or 1-1, Charat(I-4) or charAt(0)\
STOP here or \
I-5 = -1 charAt(I-5) -> error index out of bounds\
\
Case6 = \'93szcaz\'94\
\
\
\

\f1\b \
\
\
\
\
\
Static repeat() //prints out if it a repeated letter or not\
\
\
main()\{\
\
If length != 26\{\
system.out.print(\'93must be 26\'94)\
Return;\
\}\
If (                                       )\{ // check if the key does not have repeated letters\
System.out.print(\'93\'94)\
\}\
\}\
\
\
\
\
\
\
\
\
\
\
math.random() // return random. Does not print it\
Int x = random number. // this will not work.\
randomNumber = math.random() //Here a random number is returned and stored in randomNumber\
\
If (math.random() == 3)\{\
	print(3);\
\}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
Word = accadfghjmnghjb
\f0\b0 \
\
for(int i =1; i<word.length; i++)\
\{\
	for( int Last = I+1; \
\
\
	if charAt [i] == last \
	\{\
		\
	\}\
\}\
	\
\
\
\
/* can only be alphabetical character */ \
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
If cipher key is \'93VCHPRZGJNTLSKFBDQWAXEUYM12\'94 it should be wrong \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	\
\
\cf4 \cb5 asdfghjk\
Last = j.\
\
Word = asdfgjmk\
\
for(int i =0; i<word.length; i++)\
\{\
	if charAt[i] == last\{\
	  then false\
	\}\cf0 \cb6 \
\cb1 \
\

\f1\b Get jabey to figure out how/ why to use a nested loop
\f0\b0 \
\
charAt(I=0) = a\
Compare a not compare with index I\
Current = a\
chartAt (1)= b\
Compare b with a/current, and b != a/current, so we\'92re good  \
charAt (2) = c \
Compare c with a/current and b, and c!= a & c!=b, so terrific! \
charAt    \
\
Public static String repeat (String repeticion)\
	we need a loop in order to determine which index letters are being repeated \
	for (int i =1; I<index.length; I++ \
	\{\
		string charAt[0] = b\
		\
	\} \
\
\
\
1) input a key (import java.util.scanner, declare scanner as new variable)\
	String cipherKey =  user input\
	if (cipherKey.length != 26)\
	\{\
		System.out.println( \'93
\f2\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
Key must contain 26 characters.\'94
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 )\
	\} \
	else if (c\
	\{\
		\
	\}\
 	-  
\f2\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
Key must contain 26 characters.  \
	- key shouldn\'92t be repeated \
	- key can be either lowercase or uppercase \
\
\
\
\
2)   \
So plaintext that user inputs should be linked with its position on the ascii chart. As A represents int 65 on the Ascii chart, write a formula of (letter - 65) to get each alphabet letter according to its position. Ex: if the plaintext is \'93ben\'94, letter B, which is 66 on ASCII chart, will be position [1]. This position should be linked with position on the cipher key that the user inputs in the beginning.  \
\
- punctuations and spaces should stay the same, and lowercase and uppercase are treated the same.\
\
3) ciphertext that is printed out should have the same punctuation, spacing, cases. \
\
\
\
}