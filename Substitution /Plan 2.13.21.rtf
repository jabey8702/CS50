{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red52\green52\blue52;\red246\green247\blue249;\red127\green127\blue127;
}
{\*\expandedcolortbl;;\cssrgb\c26667\c26667\c26667;\cssrgb\c97255\c97647\c98039;\cssrgb\c57046\c57047\c57046;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh13460\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
Cipher key = 
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TNSHKVEFXRBAUQZCLWDMIPGJO\

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0  \
\
plaintext: abc \
\
Outcome: tns \
\
\cb4 int getPosition(char letter)\{\
	letter = letter.toUpperCase();\
	int Ascii = (int) letter; \
	int position = position - 65;\
	return position; \
\}\cb1 \
String outcome; \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 cipherKey.charAt(1)= N\
\
For (int i =0; i < plaintext.length( ); I++)\
\{\
	outcome += getPosition(plaintext.charAt (i)) ;\
	\
	\
	\
	\
\
	 \
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
Char Sample: z\
\
Sample = Sample.toUpperCase();\
\
Int Ascii = (int) Sample\
\
Print: Ascii => 90\
\
Int position = Ascii - 65 \
\
Return position; \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
Bike = ab \
Ascii = charAt (0) = a = 65\
\
Int position = 65-65 =0 \
\
POINTS [0] = 1 \
\
\
\
\
\
\
\
\
\
\
\
\
}