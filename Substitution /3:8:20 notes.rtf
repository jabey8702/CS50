{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red23\green23\blue23;\red194\green126\blue101;
\red118\green118\blue118;\red202\green202\blue202;}
{\*\expandedcolortbl;;\cssrgb\c83137\c83137\c83137;\cssrgb\c11765\c11765\c11765;\cssrgb\c80784\c56863\c47059;
\cssrgb\c53691\c53693\c53692;\cssrgb\c83229\c83229\c83125;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14380\viewh14840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Goal: \
\

\f1\b 1) write an if statement that ignores anything that\'92s not alphabetical letters
\f0\b0 \
- like the scrabble project, if statement, if not between 65~90, then continue \
- so if plainText.charAt position were not an alphabetical character (ex: 1), we want it\
 to ignore substituting plainText.charAt position to any case in the cipher key, \
and just print it out the way it is. \
\
2) print encrypted text according to the case character of plaintext \
\
\
\pard\pardeftab720\sl480\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
  plaintext = \cf4 "abC1d"\cf2 \cb1 \
\cb3   ciphertext = \cf4 "XYA1R"\cf2 \cb1 \
\cb3   what we want is \cf4 "xyA1r"\cf2 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
Problem: \
1) encrypted text is all upper case, we want it to be exactly the same case character\
 as plaintext is\
\
Solution: \
1) if (plainText.charAt (position) == uppercase) then stay  uppercase,\
 if not, change encryptedText to lowercase \
\
\cb5 *My solution 3/8 \
\
Create another for loop that compares every case in encryptedText with plaintext \
\
But can we just use the existing for loop to determine ?! }