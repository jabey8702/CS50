{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12180\viewh15100\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\ri-340\qc\partightenfactor0
\cf0 Mario Plan:\
\pard\pardeftab720\ri-340\partightenfactor0

\f1 \cf0 \

\f0 Goal: \
1) print hashes that represent heights of a pyramid from 1-8 \
2) right aligned instead of left by using dots \
\
Import java.util*\
class Mario \
\{\
	public static void main (String args[]) \
	\{\
		Scanner sc= new Scanner(System.in); \
		System.out.println("Height:");\
		int Height;\
		Height=sc.nextInt();
\f1 \
	\}\
\
\}\
\

\f0 while (Height>8 || Height<0)\
	\{\
		\
		sc= new Scanner(System.in); \
		System.out.println("Number needs to be between 1 and 8");\
		System.out.println("Height:");\
		Height=sc.nextInt();
\f1 \
\
	\}\
\
\

\f0 If Height =8\
Line 1: 7 spaces(height-line no. =spaces) 1 hash (height \'96 space)\
Line 2: 6 space 2 hashes\
Line 3: 5 space 3 hashes 
\f1 \

\f0 Line 4: 4 space 4 hashes\
Line 5: 3 space 5 hash \
Line 6: 2 space 6 hashes\
Line 7: 1 space7 hashes \
Line 8: 0 space 8 hashes \
\
\
\
  #\
 ##\
###\
int line;\
int noOfSpace=Height-line;\
int noOfHash= Height-noOfSpace\
	\
\
\cf2 Assuming height =4\cf0 \
for (int line=1;line<=8;line++)\
	\{	for(int noOfSpace=0;noOfSpace<(Height-line);noOfSpace++)\
		\{\
			\
			\
 		 no. of space<=3\
		0<3, 1<3, 2<3\
		\'85.  \
		\
		\
			System.out.print(\'93. ");\
\
		\}\
		\
		for(int noOfHash=1;noOfHash<=(Height-);noOfHash++) \
		\{\
			System.out.print("#");\
\
		\}\
		\
		System.out.println("#");\
	\}
\f1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \
\
\
\
\
\
}