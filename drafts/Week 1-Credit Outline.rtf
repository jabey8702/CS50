{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14440\viewh15580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs48 \cf0 CS50 Project:Credit
\f1\b0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs36 \cf0 - AMEX\
	- 15 digits, starts with 34 or 37\
- Mastercard \
	- 16 digits, starts with 51, 52, 53, 54, or 55\
- Visa\
	- 13 or 16 digits, starts with 4 \
\
Checksum\
- multiply every other digit by 2, starting with second to last digit\
- add those products\'92 digits together \
- add the sum to the sum of the digits that weren\'92t multiplied by 2  \
- if the total\'92s last digit is 0, number is valid \
\
Ex: \ul 4\ulnone 0\ul 0\ulnone 3\ul 6\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 1\ulnone 4\
\
4 0 6 0 0 0 0 1 \
\
8+1+ 2+ 2=13 \
\
13+0+3+4=\ul 20\ulnone   ->satisfies checksum since last digit is 0 \
\
How to get digits? \
- use remainder %\
Ex: 4003600000000014\
	4003600000000014 % 10 = 4 (this gets you last digit, apply same logic to 2nd to 	last digit, etc) \
\
TODO\
- prompt for input \
- calculate checksum \
- check for card length and starting digits \
- print AMEX, MASTERCARD, VISA, or INVALID \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 \ul \ulc2 Code\cf0 \ulnone \
\
import java.util.*;\
class Credit \
\{\
	public static void main (String args[])\
	\{    Scanner sc= new Scanner(System.in); \
		System.out.println("Number:");\
		int number;\
		number=sc.nextInt();\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \ul \ulc0 4\ulnone 0\ul 0\ulnone 3\ul 6\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 1\ulnone 	AMEX (15)\
\ul 4\ulnone 0\ul 0\ulnone 3\ul 6\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 		VISA (13, 16)\ul \
4\ulnone 0\ul 0\ulnone 3\ul 6\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 0\ulnone 0\ul 1\ulnone 4	mastercard (16)\
\
\
cardNumber%10 =1\
cardNumber%10^3=0\
cardNumber%10^5=0\
cardNumber%10^7=0\
cardNumber%10^9=0\
cardNumber%10^11=6\
cardNumber%10^13=0\
cardNumber%10^15=4 \
\
int AMEX=15\
int MC=16\
int V= 13\
int V1=16\
int oddValues=cardNumber%10\
\
Int num = 12345;\
Int num = 123456789;\
x=Digits-2\
x = \'85;\
Int firstTwo = Math.floor(num/10^x)\
If firstTwo == 12\{\
	\'85\
\}\
\
\
for (int power=1; power<=(AMEX); power+=2)\
	\{	cardNumber%10^power=oddValues;\
	\}\
sum= oddValues\
\
System.out.println(\
	\}\
\
	\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 Benjamin graham- the intelligent investor\cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs28 \cf0 \
}